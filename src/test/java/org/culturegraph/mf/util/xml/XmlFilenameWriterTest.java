/* Copyright 2013  hbz, Pascal Christoph.
 *
 *  Licensed under the Apache License, Version 2.0 the "License";
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package org.culturegraph.mf.util.xml;

import java.io.File;
import java.io.IOException;
import java.net.URISyntaxException;

import org.apache.commons.io.FileUtils;
import org.culturegraph.mf.stream.converter.xml.XmlDecoder;
import org.culturegraph.mf.stream.pipe.XmlElementSplitter;
import org.culturegraph.mf.stream.sink.XmlFilenameWriter;
import org.culturegraph.mf.stream.source.FileOpener;
import org.junit.Assert;
import org.junit.Test;

/**
 * Extracts records from an xml file and writes single xml files into
 * filesystem. The name of the xml files are generated by extracting a value
 * using an xpath.
 *
 * @author Pascal Christoph (dr0i)
 *
 */
@SuppressWarnings("javadoc")
public class XmlFilenameWriterTest {
	private static XmlFilenameWriter createXmlFilenameWriter(final String PATH) {
		final XmlFilenameWriter xmlFilenameWriter = new XmlFilenameWriter();
		xmlFilenameWriter.setStartIndex(0);
		xmlFilenameWriter.setEndIndex(2);
		xmlFilenameWriter.setTarget(PATH);
		// setting the xpath to construct the name of the file
		xmlFilenameWriter.setProperty(
				"/harvest/metadata/*[local-name() = 'record']/*[local-name() = 'global']/*[local-name() = 'tag'][@id='008H']/*[local-name() = 'subf'][@id='e']");
		return xmlFilenameWriter;
	}

	private final String PATH = "tmp";

	private void deleteTestFiles() throws IOException {
		FileUtils.deleteDirectory(new File(this.PATH));
	}

	@Test
	public void testPicaXmlSplits() throws URISyntaxException, IOException {
		final FileOpener opener = new FileOpener();
		final XmlElementSplitter xmlSplitter = new XmlElementSplitter();
		xmlSplitter.setElementName("metadata");
		xmlSplitter.setTopLevelElement("harvest");
		final XmlFilenameWriter xmlFilenameWriter = XmlFilenameWriterTest
				.createXmlFilenameWriter(this.PATH);
		opener.setReceiver(new XmlDecoder()).setReceiver(xmlSplitter)
				.setReceiver(xmlFilenameWriter);
		final File infile = new File(Thread.currentThread().getContextClassLoader()
				.getResource("data/pica.xml").toURI());
		opener.process(infile.getAbsolutePath());
		opener.closeStream();
		Assert.assertEquals(Long.parseLong("1066709072"),
				FileUtils.checksumCRC32(new File(this.PATH + "/DE/DE-Tir1.xml")));
		deleteTestFiles();
	}
}
