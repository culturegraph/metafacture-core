/*
 * Copyright 2017 Christoph BÃ¶hme
 *
 * Licensed under the Apache License, Version 2.0 the "License";
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

ext.mavenName = 'Metamorph'
description = 'A domain specific language for transforming Metafacture event streams'

dependencies {
  api project(':metafacture-framework')
  api project(':metamorph-api')
  implementation project(':metafacture-commons')
  implementation project(':metafacture-flowcontrol')
  implementation project(':metafacture-mangling')
  implementation project(':metafacture-javaintegration')
  implementation 'org.slf4j:slf4j-api:1.7.21'
  testImplementation 'junit:junit:4.12'
  testImplementation 'org.mockito:mockito-core:2.5.5'
  testRuntimeOnly 'org.slf4j:slf4j-simple:1.7.21'
}

sourceSets {
  test {
    // Copy test resources into same directory as test classes. This is required
    // for test TestMetamorphMacros#issue227_shouldSupportXincludeForMacros()
    // to work properly. A better solution would be to enable xinclude to load
    // resources from the classpath.
    output.resourcesDir = sourceSets.test.java.outputDir
  }
}

test {
  testLogging {
    showStandardStreams = true
    exceptionFormat = 'full'
  }
}
